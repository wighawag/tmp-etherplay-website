{"version":3,"names":[],"sources":["Blockie.svelte"],"sourcesContent":["<script lang=\"ts\">import { afterUpdate } from 'svelte';\r\nexport let _class = '';\r\nexport { _class as class };\r\nexport let address;\r\nexport let scale = 4;\r\nlet lastOptions = undefined;\r\nlet canvas;\r\n// The random number is a js implementation of the Xorshift PRNG\r\nconst randseed = new Array(4); // Xorshift: [x, y, z, w] 32 bit values\r\nfunction seedrand(seed) {\r\n    for (let i = 0; i < randseed.length; i++) {\r\n        randseed[i] = 0;\r\n    }\r\n    for (let i = 0; i < seed.length; i++) {\r\n        randseed[i % 4] =\r\n            (randseed[i % 4] << 5) - randseed[i % 4] + seed.charCodeAt(i);\r\n    }\r\n}\r\nfunction rand() {\r\n    // based on Java's String.hashCode(), expanded to 4 32bit values\r\n    const t = randseed[0] ^ (randseed[0] << 11);\r\n    randseed[0] = randseed[1];\r\n    randseed[1] = randseed[2];\r\n    randseed[2] = randseed[3];\r\n    randseed[3] = randseed[3] ^ (randseed[3] >> 19) ^ t ^ (t >> 8);\r\n    return (randseed[3] >>> 0) / ((1 << 31) >>> 0);\r\n}\r\nfunction createColor() {\r\n    // saturation is the whole color spectrum\r\n    const h = Math.floor(rand() * 360);\r\n    // saturation goes from 40 to 100, it avoids greyish colors\r\n    const s = rand() * 60 + 40 + '%';\r\n    // lightness can be anything from 0 to 100, but probabilities are a bell curve around 50%\r\n    const l = (rand() + rand() + rand() + rand()) * 25 + '%';\r\n    const color = 'hsl(' + h + ',' + s + ',' + l + ')';\r\n    return color;\r\n}\r\nfunction createImageData(size) {\r\n    const width = size; // Only support square icons for now\r\n    const height = size;\r\n    const dataWidth = Math.ceil(width / 2);\r\n    const mirrorWidth = width - dataWidth;\r\n    const data = [];\r\n    for (let y = 0; y < height; y++) {\r\n        let row = [];\r\n        for (let x = 0; x < dataWidth; x++) {\r\n            // this makes foreground and background color to have a 43% (1/2.3) probability\r\n            // spot color has 13% chance\r\n            row[x] = Math.floor(rand() * 2.3);\r\n        }\r\n        const r = row.slice(0, mirrorWidth);\r\n        r.reverse();\r\n        row = row.concat(r);\r\n        for (let i = 0; i < row.length; i++) {\r\n            data.push(row[i]);\r\n        }\r\n    }\r\n    return data;\r\n}\r\nfunction setCanvas(canvas, imageData, color, scale, bgcolor, spotcolor) {\r\n    const width = Math.sqrt(imageData.length);\r\n    const size = width * scale;\r\n    canvas.width = size;\r\n    canvas.height = size;\r\n    const cc = canvas.getContext('2d');\r\n    if (cc) {\r\n        cc.fillStyle = bgcolor;\r\n        cc.fillRect(0, 0, canvas.width, canvas.height);\r\n        cc.fillStyle = color;\r\n        for (let i = 0; i < imageData.length; i++) {\r\n            // if data is 2, choose spot color, if 1 choose foreground\r\n            cc.fillStyle = imageData[i] === 1 ? color : spotcolor;\r\n            // if data is 0, leave the background\r\n            if (imageData[i]) {\r\n                const row = Math.floor(i / width);\r\n                const col = i % width;\r\n                cc.fillRect(col * scale, row * scale, scale, scale);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        console.error(`could not create 2d context for Blockie canvas`);\r\n    }\r\n}\r\nfunction update() {\r\n    if (lastOptions &&\r\n        lastOptions.address === address &&\r\n        lastOptions.scale === scale) {\r\n        return;\r\n    }\r\n    lastOptions = {\r\n        address,\r\n        scale,\r\n    };\r\n    seedrand((address && address.toLowerCase()) ||\r\n        '0x0000000000000000000000000000000000000000');\r\n    const color = createColor();\r\n    const bgcolor = createColor();\r\n    const spotcolor = createColor();\r\n    const imageData = createImageData(8);\r\n    setCanvas(canvas, imageData, color, scale, bgcolor, spotcolor);\r\n}\r\nafterUpdate(update);\r\n</script>\n\n<style>\n  canvas {\n    image-rendering: -moz-crisp-edges;\n    image-rendering: -webkit-crisp-edges;\n    image-rendering: pixelated;\n    image-rendering: crisp-edges;\n  }\n</style>\n\n<canvas class={_class} bind:this={canvas} />\n"],"mappings":"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"}